# Set minimum required version of CMake
cmake_minimum_required(VERSION 3.12)

# Include build function from Pico SDK
include($ENV{PICO_SDK_PATH}/external/pico_sdk_import.cmake)

# Set name of project in PROJECT_NAME variable
project(simon-game C CXX ASM)

# Set C language standard to C11
set(CMAKE_C_STANDARD 11)

# Set C++ language standard to C++17
set(CMAKE_CXX_STANDARD 17)

# Export compile commands
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

if (VERBOSE)
  add_compile_definitions(VERBOSE)
endif()

# Initializes the Pico SDK for use in the project.
pico_sdk_init()

# Add executable target with specified source files
add_executable(${PROJECT_NAME}
    debounce.cpp
    debounce.hpp
    main.cpp
)

# Create map, bin, extra, uf2 files
pico_add_extra_outputs(${PROJECT_NAME})

# Link to pico_stdlib and pico_multicore libraries
target_link_libraries(
    ${PROJECT_NAME}
    pico_stdlib
    pico_multicore
    hardware_i2c
)

# Specify private include directories for target
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_LIST_DIR} )

# Enable USB output and disable UART output
pico_enable_stdio_usb(${PROJECT_NAME} 1)
pico_enable_stdio_uart(${PROJECT_NAME} 0)
